{"ast":null,"code":"var _jsxFileName = \"/Users/yejun/projects/RecipeFront/src/Body/Popular.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../CSS/Popular.css'; // CSS 스타일을 따로 추가할 수 있습니다.\nimport FoodCardComponent from '../Components/FoodCardComponent';\nimport { useQuery } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchPopularQuery = async () => {\n  const response = await fetch('http://localhost:4000/services/food/popular');\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n};\nconst Popular = () => {\n  _s();\n  //custom_search(\"닭갈비\");\n  //이미지 검색 추가.\n\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery({\n    queryKey: ['posts'],\n    // 데이터 캐시 키\n    queryFn: fetchPopularQuery // 데이터를 가져오는 함수\n\n    /*{\n      onSuccess: (data) => {\n        console.log('데이터 성공적으로 가져옴:', data);\n      },\n    }  // usequery 옵션 지정\n      */\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(data['item']);\n  const test_data_list = test_data.map((name, idx) => /*#__PURE__*/_jsxDEV(FoodCardComponent, {\n    name: name,\n    img_src: \"\\uC815\\uBCF4\\uC5C6\\uC74C\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 8\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: test_data_list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n/*\nfunction App() {\n  // useQuery 훅을 사용하여 데이터를 가져옵니다.\n  const { data, error, isLoading, isError } = useQuery({\n    queryKey: ['posts'],  // 데이터 캐시 키\n    queryFn: fetchPosts,  // 데이터를 가져오는 함수\n  });\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Posts</h1>\n      <ul>\n        {data.map(post => (\n          <li key={post.id}>{post.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n*/\n_s(Popular, \"tLVl4bLXOK0wdfcIQIhOB1GmFVs=\", false, function () {\n  return [useQuery];\n});\n_c = Popular;\nexport default Popular;\nvar _c;\n$RefreshReg$(_c, \"Popular\");","map":{"version":3,"names":["React","FoodCardComponent","useQuery","jsxDEV","_jsxDEV","fetchPopularQuery","response","fetch","ok","Error","json","Popular","_s","data","error","isLoading","isError","queryKey","queryFn","children","fileName","_jsxFileName","lineNumber","columnNumber","message","console","log","test_data_list","test_data","map","name","idx","img_src","className","_c","$RefreshReg$"],"sources":["/Users/yejun/projects/RecipeFront/src/Body/Popular.tsx"],"sourcesContent":["import React from 'react';\nimport '../CSS/Popular.css';  // CSS 스타일을 따로 추가할 수 있습니다.\nimport FoodCardComponent from '../Components/FoodCardComponent';\nimport { API_key, API_SRC } from '../API/custom_search_api_service';\nimport { useQuery } from '@tanstack/react-query';\n\nconst fetchPopularQuery = async () => {\n  const response = await fetch('http://localhost:4000/services/food/popular');\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return response.json();\n};\n\nconst Popular: React.FC = () => {\n  \n  //custom_search(\"닭갈비\");\n  //이미지 검색 추가.\n\n  const { data, error, isLoading, isError } = useQuery({\n    queryKey: ['posts'],  // 데이터 캐시 키\n    queryFn: fetchPopularQuery, // 데이터를 가져오는 함수\n    \n    /*{\n      onSuccess: (data) => {\n        console.log('데이터 성공적으로 가져옴:', data);\n      },\n    }  // usequery 옵션 지정\n      */\n  });\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  console.log(data['item']);\n  const test_data_list = test_data.map(\n    (name : string, idx : number) => \n      (<FoodCardComponent name={name} img_src='정보없음'></FoodCardComponent>));\n  return (\n    <div className=\"app-container\">\n      \n      {/* 카드 레이아웃 */}\n      <div className=\"card-container\">\n        {test_data_list}\n      </div>\n    </div>\n  );\n}\n\n/*\nfunction App() {\n  // useQuery 훅을 사용하여 데이터를 가져옵니다.\n  const { data, error, isLoading, isError } = useQuery({\n    queryKey: ['posts'],  // 데이터 캐시 키\n    queryFn: fetchPosts,  // 데이터를 가져오는 함수\n  });\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Posts</h1>\n      <ul>\n        {data.map(post => (\n          <li key={post.id}>{post.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n*/\n\nexport default Popular;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB,CAAC,CAAE;AAC9B,OAAOC,iBAAiB,MAAM,iCAAiC;AAE/D,SAASC,QAAQ,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;EAC3E,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;EACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B;EACA;;EAEA,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGd,QAAQ,CAAC;IACnDe,QAAQ,EAAE,CAAC,OAAO,CAAC;IAAG;IACtBC,OAAO,EAAEb,iBAAiB,CAAE;;IAE5B;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,CAAC;EAEF,IAAIU,SAAS,EAAE;IACb,oBAAOX,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIP,OAAO,EAAE;IACX,oBAAOZ,OAAA;MAAAe,QAAA,GAAK,SAAO,EAACL,KAAK,CAACU,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1C;EAEAE,OAAO,CAACC,GAAG,CAACb,IAAI,CAAC,MAAM,CAAC,CAAC;EACzB,MAAMc,cAAc,GAAGC,SAAS,CAACC,GAAG,CAClC,CAACC,IAAa,EAAEC,GAAY,kBACzB3B,OAAA,CAACH,iBAAiB;IAAC6B,IAAI,EAAEA,IAAK;IAACE,OAAO,EAAC;EAAM;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAoB,CAAE,CAAC;EACzE,oBACEnB,OAAA;IAAK6B,SAAS,EAAC,eAAe;IAAAd,QAAA,eAG5Bf,OAAA;MAAK6B,SAAS,EAAC,gBAAgB;MAAAd,QAAA,EAC5BQ;IAAc;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BAX,EAAA,CAxCMD,OAAiB;EAAA,QAKuBT,QAAQ;AAAA;AAAAgC,EAAA,GALhDvB,OAAiB;AAqEvB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}